{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Axios from 'axios'; // all functions defined for handling state variables are organized/defined here. \n\nfunction HandleStates() {\n  _s();\n\n  const [itemList, setItemList] = useState([]);\n  const [showClicked, setShowClicked] = useState(false); //object array for added inputs and updated inputs respectively. \n\n  const [iItems, setiItems] = useState({\n    id: 0,\n    firstname: '',\n    lastname: 0,\n    age: 0,\n    risklevel: 0\n  });\n  const [newiItems, setnewiItems] = useState({\n    id: 0,\n    firstname: '',\n    lastname: 0,\n    age: 0,\n    risklevel: 0\n  }); //Handlechange events for added and updated inputs respectively. \n\n  const handleChange = event => {\n    setiItems({ ...iItems,\n      [event.target.name]: event.target.value\n    });\n    console.log(iItems);\n  };\n\n  const handleChange2 = event => {\n    setnewiItems({ ...newiItems,\n      [event.target.name]: event.target.value\n    });\n    console.log(newiItems);\n  }; // Functions below connect frontend with backend.\n\n\n  const addItem = () => {\n    Axios.post('http://localhost:3001/inventorylist/create', {\n      items: iItems\n    }).then(() => {\n      setItemList([...itemList, iItems]);\n    });\n  };\n\n  const getItemList = bool => {\n    Axios.get('http://localhost:3001/inventorylist/').then(response => {\n      setItemList(response.data);\n    });\n    setShowClicked(bool);\n  };\n\n  const deleteItem = id => {\n    Axios.delete(`http://localhost:3001/inventorylist/delete/${id}`).then(response => {\n      setItemList(itemList.filter(val => val.id != id).map(newVal => ({\n        id: newVal.id,\n        firstname: newVal.firstname,\n        lastname: newVal.lastname,\n        age: newVal.age,\n        risklevel: newVal.risklevel\n      })));\n    });\n  };\n\n  const updateItem = id => {\n    Axios.put('http://localhost:3001/inventorylist/update', {\n      items: newiItems,\n      id: id\n    }).then(response => {\n      setItemList(itemList.map(val => {\n        return val.id === id ? {\n          id: val.id,\n          firstname: newiItems.firstname,\n          lastname: newiItems.lastname,\n          age: newiItems.age,\n          risklevel: newiItems.risklevel\n        } : val;\n      }));\n    });\n  };\n\n  return {\n    iItems,\n    newiItems,\n    setiItems,\n    setnewiItems,\n    itemList,\n    showClicked,\n    handleChange,\n    handleChange2,\n    addItem,\n    getItemList,\n    deleteItem,\n    updateItem\n  };\n}\n\n_s(HandleStates, \"icVNcncOs5oc+mz7LCx6gqnnEiI=\");\n\n_c = HandleStates;\nexport default HandleStates;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleStates\");","map":{"version":3,"sources":["C:/Users/Justeen/Desktop/TriAuto/client/src/components/handleStates.js"],"names":["useState","Axios","HandleStates","itemList","setItemList","showClicked","setShowClicked","iItems","setiItems","id","firstname","lastname","age","risklevel","newiItems","setnewiItems","handleChange","event","target","name","value","console","log","handleChange2","addItem","post","items","then","getItemList","bool","get","response","data","deleteItem","delete","filter","val","map","newVal","updateItem","put"],"mappings":"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","sourcesContent":["import {useState} from 'react'; \r\nimport Axios from 'axios';\r\n\r\n\r\n// all functions defined for handling state variables are organized/defined here. \r\n\r\nfunction HandleStates() {\r\n    const [itemList, setItemList] = useState([]); \r\n    const [showClicked, setShowClicked] = useState(false);\r\n\r\n    //object array for added inputs and updated inputs respectively. \r\n    const [iItems,setiItems] = useState(\r\n      {\r\n          id:0,\r\n          firstname: '',\r\n          lastname: 0,\r\n          age: 0,\r\n          risklevel: 0 \r\n      }\r\n    );\r\n    const [newiItems,setnewiItems] = useState(\r\n      {\r\n        id:0,\r\n        firstname: '',\r\n        lastname: 0,\r\n        age: 0,\r\n        risklevel: 0 \r\n      }\r\n    );\r\n\r\n\r\n    //Handlechange events for added and updated inputs respectively. \r\n    const handleChange = (event) => {\r\n         \r\n          setiItems({\r\n              ...iItems,\r\n              [event.target.name]:event.target.value\r\n          })\r\n          console.log(iItems);\r\n    }\r\n  \r\n    const handleChange2 = (event) => {\r\n      \r\n      setnewiItems({\r\n          ...newiItems,\r\n          [event.target.name]:event.target.value\r\n      })\r\n      console.log(newiItems)\r\n      \r\n    }\r\n\r\n    // Functions below connect frontend with backend.\r\n    const addItem = () => {\r\n      Axios.post('http://localhost:3001/inventorylist/create',{\r\n        items: iItems\r\n        }).then(()=>\r\n        {\r\n          setItemList([...itemList,\r\n                        iItems\r\n          ]); \r\n        } \r\n        );\r\n    };\r\n\r\n    const getItemList = (bool) => {\r\n        Axios.get('http://localhost:3001/inventorylist/').then((response)=> {\r\n            setItemList(response.data); });\r\n        \r\n        setShowClicked(bool)\r\n    }\r\n\r\n    \r\n    const deleteItem = (id)=> {\r\n      Axios.delete(`http://localhost:3001/inventorylist/delete/${id}`).then((response)=> {\r\n        setItemList(itemList.filter(val=>val.id!=id).map(newVal => ({id:newVal.id, firstname: newVal.firstname, lastname: newVal.lastname, age:newVal.age, risklevel:newVal.risklevel})))\r\n              });\r\n    }\r\n\r\n    const updateItem =(id)=> {\r\n      Axios.put('http://localhost:3001/inventorylist/update',{\r\n          items: newiItems,\r\n          id: id\r\n            }).then((response)=> {\r\n                setItemList(itemList.map((val)=>{\r\n                      return val.id === id ? {id: val.id, firstname: newiItems.firstname, lastname: newiItems.lastname, age: newiItems.age, risklevel: newiItems.risklevel} : val      \r\n                      }))\r\n                  }\r\n               );\r\n      }\r\n\r\n      \r\n    return {iItems, newiItems, setiItems, setnewiItems, itemList, showClicked, handleChange,handleChange2, addItem, getItemList,deleteItem, updateItem}\r\n}\r\n\r\nexport default HandleStates\r\n"]},"metadata":{},"sourceType":"module"}